/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * selectDecryptFile.java
 *
 * Created on Apr 29, 2011, 8:15:40 PM
 */

/**
 *
 * @author akriti
 */
  import java.math.BigInteger;
import java.security.*;
import javax.swing.*;
import java.util.Vector;
import java.util.*;
import java.io.*;
 import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.awt.Graphics;
public class selectDecryptFile extends javax.swing.JFrame {
	private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField1;
    String decryptedFileName,encryptedFileName;
 BigInteger p,gre;
    //Vector u=new Vector();
    Vector v=new Vector();
    /** Creates new form selectDecryptFile */
    public selectDecryptFile(BigInteger p,BigInteger gre,Vector v,String encryptedFileName) {
    	this.p=p;
    	this.gre=gre;
    	this.v=v;
    	this.encryptedFileName=encryptedFileName;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ELGAMAL ENCRYPTION SYSTEM");
        addWindowListener(new WindowAdapter(){


            public void windowClosing(WindowEvent evt){//System.exit(0);
            int response = JOptionPane.showConfirmDialog(null, "Do you want to exit?", "Confirm",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION)
            {
            	System.exit(0);
            }
            else //if(response==JOptionPane.NO_OPTION)
            {

				setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            }
            }
        });


        jButton1.setText("Decrypted File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        setLayout(null);
        add(jButton1);
        add(jButton2);
        add(jTextField1);

        /*javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(95, 95, 95))
        );

        pack();*/
        setSize(500,500);

        jButton1.setBounds(20,150,150,20);
        jTextField1.setBounds(200,150,250,20);
        jButton2.setBounds(200,240,60,20);
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
          	int checkdf1=0,checkdf2=0,checkdf3=0,checkdf4=0;


        /*do
        {
        	checkdf1=0;
        	checkdf2=0;
        	checkdf3=0;
        	checkdf4=0;*/
        	do
        	{
        	checkdf1=0;
        	checkdf2=0;
        	checkdf3=0;
        	checkdf4=0;
        	do
        	{
        	checkdf1=0;
        	checkdf2=0;
        	checkdf3=0;
        	checkdf4=0;

        saveFile sf=new saveFile();
	   File filedecryptedFileName=sf.selectEncrypted();
        decryptedFileName=String.valueOf(filedecryptedFileName);
        if(decryptedFileName.equals(encryptedFileName))
        {
        	javax.swing.JOptionPane.showMessageDialog(null,"the encrypted file and decrypted file can not be the same");        // TODO add your handling code here:
        	checkdf4=1;
        }
       else if(filedecryptedFileName.exists())
        {

        	int response = JOptionPane.showConfirmDialog(null, "The decrypted file already exists.\n\nDo you want to overwrite the existing file", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
	         if(response==JOptionPane.YES_OPTION)
	         {

	         }
	         else
	         {
				checkdf3=1;
	         }
        }
        else if(filedecryptedFileName==null)
        {
        	checkdf1=1;
        	javax.swing.JOptionPane.showMessageDialog(null,"Either the decrypted file or encrypted file is not selected.\n\nReselect the file");        // TODO add your handling code here:
        }
		 }while(checkdf3==1 || checkdf4==1 || checkdf1==1);


        if(!decryptedFileName.endsWith("txt"))
        {
        	checkdf2=1;
        	javax.swing.JOptionPane.showMessageDialog(null,"Either the decrypted file or encrypted file is not a txt file");        // TODO add your handling code here:
        }
        }while(checkdf2==1);

        //javax.swing.JOptionPane.showMessageDialog(null,"the file where decrypted data is "+decryptedFileName);        // TODO add your handling code here:




        // TODO add your handling code here:
        /*saveFile sf=new saveFile();
        int checkdf=1;

        while(checkdf==1)
        {

			File filedecryptedFileName=sf.selectEncrypted();
			decryptedFileName=String.valueOf(filedecryptedFileName);
			if(filedecryptedFileName.exists())
			{
				int response = JOptionPane.showConfirmDialog(null, "This file already exists.Do you want to overwrite the existing file", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
	         if(response==JOptionPane.YES_OPTION)
	         {
				checkdf=0;
	         }
	         else
	         {
				checkdf=1;
	         }
			}
			//	javax.swing.JOptionPane.showMessageDialog(null,"the file is "+decryptedFileName);
        if(decryptedFileName==null)
        {
        	        	javax.swing.JOptionPane.showMessageDialog(null,"did not select any file.reselect the file");

        }
        else if(!decryptedFileName.endsWith("txt"))
        {

        	javax.swing.JOptionPane.showMessageDialog(null,"can select only txt files");
        }
        else
        	checkdf=0;

        }*/

	//	javax.swing.JOptionPane.showMessageDialog(null,"the decrypted file is "+decryptedFileName);

		jTextField1.setText(decryptedFileName);
        //jTextField1ActionPerformed(evt);

    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try
        		{


        decryptClass dc=new decryptClass();
        dc.decryptMethod(p,gre,decryptedFileName,encryptedFileName,v);
        javax.swing.JOptionPane.showMessageDialog(null,"the decrypted file is ready");

        		}
        		catch(Exception e)
        		{
        		}
        		this.setVisible(false);
        		FirstPage fp=new FirstPage();
        		fp.setVisible(true);
    }

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new selectDecryptFile().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify
    /*private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField1;*/
    // End of variables declaration

}
